"""
Django settings for DjangoTest project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Build log path
BASE_LOG_DIR = os.path.join(BASE_DIR, "log")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ny%!819q@v@k+6sdf@,jn2988#ix=6&y#lr8&a8ez&fs=oqt3m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
DEBUG_PROPAGATE_EXCEPTIONS = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'apps.stu',
    'apps.userprofile',
]

REST_FRAMEWORK = {
    # 配置默认页面大小
    'PAGE_SIZE': 10,
    # 配置默认的分页类
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',

    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',  # 时间相关的字段

    # 配置异常处理器
    'EXCEPTION_HANDLER': 'DjangoTest.common.exception_base.custom_exception_handler',

    # 配置默认解析器
    # 'DEFAULT_PARSER_CLASSES': (
    # 'rest_framework.parsers.JSONParser',
    # 'rest_framework.parsers.FormParser',
    # 'rest_framework.parsers.MultiPartParser',
    # ),

    # 配置默认限流类
    # 'DEFAULT_THROTTLE_CLASSES': (),

    # 配置默认授权类
    # 'DEFAULT_PERMISSION_CLASSES': (
    # 'rest_framework.permissions.IsAuthenticated',
    # ),

    # 配置默认认证类
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    # 关闭api调试界面
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',  # json渲染
        'rest_framework.renderers.BrowsableAPIRenderer',  # 浏览器渲染(生产环境可关掉)
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'DjangoTest.middleware.ExceptionMiddleWare',
    'DjangoTest.middleware.TokenMiddleWare',
]

ROOT_URLCONF = 'DjangoTest.urls'

AUTH_USER_MODEL = "apps.userprofile.UserProfile"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOGGING = {
    # 版本
    'version': 1,
    # True 禁用默认的 logger 实例 django 将不再打印日志  默认为 True
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]'
                      '[%(levelname)s]%(message)s'
        },
        # 简单的日志格式
        'simple': {
            'format': '[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s'
        },
        # 定义一个特殊的日志格式
        'collect': {
            'format': '%(message)s'
        }
    },
    # 过滤器
    'filters': {
        'require_debug_true': {
            # 只有在 debug 为 True 时才会打印日志
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'stu': {
            'level': 'DEBUG',
            # 按文件大小切分
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'standard',
            # 日志保存位置
            'filename': os.path.join(BASE_LOG_DIR, "stu.log"),
            'maxBytes': 1024 * 1024 * 10,
            'backupCount': 3,
            'encoding': 'utf-8'
        },
        'user': {
            'level': 'DEBUG',
            # 按文件大小切分
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'standard',
            # 日志保存位置
            'filename': os.path.join(BASE_LOG_DIR, "user.log"),
            'maxBytes': 1024 * 1024 * 10,
            'backupCount': 3,
            'encoding': 'utf-8'
        },
        'request_error': {
            'level': 'ERROR',
            # 按文件大小切分
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'standard',
            # 日志保存位置
            'filename': os.path.join(BASE_LOG_DIR, "request_error.log"),
            'maxBytes': 1024 * 1024 * 10,
            'backupCount': 3,
        },
        # 控制台输出
        'console': {
            'level': 'DEBUG',
            # 'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'DEBUG',
        },
        'stu': {
            'handlers': ['stu', "console"],
            'level': 'DEBUG',
            'propagate': True,
        },
        'request_error': {
            'handlers': ['request_error', "console"],
            'level': 'DEBUG',
            'propagate': True,
        },
        'user': {
            'handlers': ['user', "console"],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}

WSGI_APPLICATION = 'DjangoTest.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django-test',
        'USER': 'root',
        'PASSWORD': '密码',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    },

}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://@127.0.0.1:6379/15",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "密码"
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True  # 本地化

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
